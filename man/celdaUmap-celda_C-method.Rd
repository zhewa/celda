% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/celda_C.R
\name{celdaUmap,celda_C-method}
\alias{celdaUmap,celda_C-method}
\title{umap for celda_C}
\usage{
\S4method{celdaUmap}{celda_C}(
  counts,
  celdaMod,
  maxCells = 25000,
  minClusterSize = 100,
  modules = NULL,
  seed = 12345,
  umapConfig = umap::umap.defaults
)
}
\arguments{
\item{counts}{Integer matrix. Rows represent features and columns represent
cells. This matrix should be the same as the one used to generate
`celdaMod`.}

\item{celdaMod}{Celda object of class `celda_C`.}

\item{maxCells}{Integer. Maximum number of cells to plot. Cells will be
randomly subsampled if ncol(counts) > maxCells. Larger numbers of cells
requires more memory. Default 25000.}

\item{minClusterSize}{Integer. Do not subsample cell clusters below this
threshold. Default 100.}

\item{modules}{Integer vector. Determines which features modules to use for
UMAP. If NULL, all modules will be used. Default NULL.}

\item{seed}{Integer. Passed to \link[withr]{with_seed}. For reproducibility,
a default value of 12345 is used. If NULL, no calls to
\link[withr]{with_seed} are made.}

\item{umapConfig}{An object of class "umap.config" specifying parameters to
the UMAP algorithm.}
}
\value{
A two column matrix of umap coordinates
}
\description{
Embeds cells in two dimensions using umap based on a `celda_C`
 model. PCA on the normalized counts is used to reduce the number of features
 before applying umap.
}
\examples{
data(celdaCSim, celdaCMod)
umapRes <- celdaUmap(celdaCSim$counts, celdaCMod)
}
\seealso{
`celda_C()` for clustering cells and `celdaHeatmap()` for displaying
 expression.
}
