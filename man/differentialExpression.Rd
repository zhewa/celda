% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diffExp.R
\name{differentialExpression}
\alias{differentialExpression}
\title{Differential expression for cell subpopulations using MAST}
\usage{
differentialExpression(
  counts,
  celdaMod,
  c1,
  c2 = NULL,
  onlyPos = FALSE,
  log2fcThreshold = NULL,
  fdrThreshold = 1
)
}
\arguments{
\item{counts}{Integer matrix. Rows represent features and columns represent
cells. This matrix should be the same as the one used to generate
`celdaMod`.}

\item{celdaMod}{Celda object of class `celda_C` or `celda_CG`.}

\item{c1}{Integer vector. Cell populations to include in group 1 for the
differential expression analysis.}

\item{c2}{Integer vector. Cell populations to include in group 2 for the
differential expression analysis. If NULL, the clusters in the c1 group are
compared to all other clusters. Default NULL.}

\item{onlyPos}{Logical. Whether to only return markers with positive log2
fold change. Default FALSE.}

\item{log2fcThreshold}{Numeric. A number greater than 0 that specifies the
absolute log2 fold change threshold. Only features with absolute value
above this threshold will be returned. If NULL, this filter will not be
applied. Default NULL.}

\item{fdrThreshold}{Numeric. A number between 0 and 1 that specifies the
false discovery rate (FDR) threshold. Only features below this threshold
will be returned. Default 1.}
}
\value{
Data frame containing MAST results including statistics such as
 p-value, log2 fold change, and FDR.
}
\description{
Uses MAST to find differentially expressed features for
 specified cell subpopulations.
}
\examples{
data(celdaCGSim, celdaCGMod)
clusterDiffexpRes = differentialExpression(celdaCGSim$counts,
    celdaCGMod, c1 = c(1, 2))
}
