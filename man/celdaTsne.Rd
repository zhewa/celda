% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_generics.R
\name{celdaTsne}
\alias{celdaTsne}
\title{Embeds cells in two dimensions using tSNE based on celda_CG results.}
\usage{
celdaTsne(
  counts,
  celdaMod,
  maxCells = 25000,
  minClusterSize = 100,
  initialDims = 20,
  modules = NULL,
  perplexity = 20,
  maxIter = 2500,
  ...
)
}
\arguments{
\item{counts}{Integer matrix. Rows represent features and columns represent
cells. This matrix should be the same as the one used to generate
`celdaMod`.}

\item{celdaMod}{Celda object of class `celda_CG`.}

\item{maxCells}{Integer. Maximum number of cells to plot. Cells will be
randomly subsampled if ncol(counts) > maxCells. Larger numbers of cells
requires more memory. Default 25000.}

\item{minClusterSize}{Integer. Do not subsample cell clusters below this
threshold. Default 100.}

\item{initialDims}{integer. The number of dimensions that should be retained
in the initial PCA step. Default 20.}

\item{modules}{Integer vector. Determines which features modules to use for
tSNE. If NULL, all modules will be used. Default NULL.}

\item{perplexity}{Numeric. Perplexity parameter for tSNE. Default 20.}

\item{maxIter}{Integer. Maximum number of iterations in tSNE generation.
Default 2500.}

\item{...}{Additional parameters.}
}
\value{
Numeric Matrix of dimension `ncol(counts)` x 2, colums representing
 the "X" and "Y" coordinates in the data's t-SNE represetation.
}
\description{
Embeds cells in two dimensions using tSNE based on celda_CG results.
}
\examples{
data(celdaCGSim, celdaCGMod)
tsneRes <- celdaTsne(celdaCGSim$counts, celdaCGMod)
}
